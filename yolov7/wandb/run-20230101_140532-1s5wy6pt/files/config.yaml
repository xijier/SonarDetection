wandb_version: 1

_wandb:
  desc: null
  value:
    cli_version: 0.13.7
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    python_version: 3.9.15
    start_time: 1672553132.400757
    t:
      1:
      - 1
      - 41
      - 49
      - 55
      - 63
      2:
      - 1
      - 41
      - 49
      - 55
      - 63
      3:
      - 16
      - 23
      4: 3.9.15
      5: 0.13.7
      8:
      - 3
      - 5
artifact_alias:
  desc: null
  value: latest
auxotaloss:
  desc: null
  value: false
batch_size:
  desc: null
  value: 2
bbox_interval:
  desc: null
  value: -1
bucket:
  desc: null
  value: ''
cache:
  desc: null
  value: null
cfg:
  desc: null
  value: configs\yolov7-transformer-Improved\yolov7-Transformer-ConvNext-attnetion.yaml
cos_lr:
  desc: null
  value: false
data:
  desc: null
  value: data\VOC.yaml
data_dict:
  desc: null
  value:
    download: "import xml.etree.ElementTree as ET\n\nfrom tqdm import tqdm\nfrom utils.general\
      \ import download, Path\n\n\ndef convert_label(path, lb_path, year, image_id):\n\
      \    def convert_box(size, box):\n        dw, dh = 1. / size[0], 1. / size[1]\n\
      \        x, y, w, h = (box[0] + box[1]) / 2.0 - 1, (box[2] + box[3]) / 2.0 -\
      \ 1, box[1] - box[0], box[3] - box[2]\n        return x * dw, y * dh, w * dw,\
      \ h * dh\n\n    in_file = open(path / f'VOC{year}/Annotations/{image_id}.xml')\n\
      \    out_file = open(lb_path, 'w')\n    tree = ET.parse(in_file)\n    root =\
      \ tree.getroot()\n    size = root.find('size')\n    w = int(size.find('width').text)\n\
      \    h = int(size.find('height').text)\n\n    for obj in root.iter('object'):\n\
      \        cls = obj.find('name').text\n        if cls in yaml['names'] and not\
      \ int(obj.find('difficult').text) == 1:\n            xmlbox = obj.find('bndbox')\n\
      \            bb = convert_box((w, h), [float(xmlbox.find(x).text) for x in ('xmin',\
      \ 'xmax', 'ymin', 'ymax')])\n            cls_id = yaml['names'].index(cls) \
      \ # class id\n            out_file.write(\" \".join([str(a) for a in (cls_id,\
      \ *bb)]) + '\\n')\n\n\n# Download\ndir = Path(yaml['path'])  # dataset root\
      \ dir\nurl = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'\n\
      urls = [url + 'VOCtrainval_06-Nov-2007.zip',  # 446MB, 5012 images\n       \
      \ url + 'VOCtest_06-Nov-2007.zip',  # 438MB, 4953 images\n        url + 'VOCtrainval_11-May-2012.zip']\
      \  # 1.95GB, 17126 images\ndownload(urls, dir=dir / 'images', delete=False)\n\
      \n# Convert\npath = dir / f'images/VOCdevkit'\nfor year, image_set in ('2012',\
      \ 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test'):\n\
      \    imgs_path = dir / 'images' / f'{image_set}{year}'\n    lbs_path = dir /\
      \ 'labels' / f'{image_set}{year}'\n    imgs_path.mkdir(exist_ok=True, parents=True)\n\
      \    lbs_path.mkdir(exist_ok=True, parents=True)\n\n    image_ids = open(path\
      \ / f'VOC{year}/ImageSets/Main/{image_set}.txt').read().strip().split()\n  \
      \  for id in tqdm(image_ids, desc=f'{image_set}{year}'):\n        f = path /\
      \ f'VOC{year}/JPEGImages/{id}.jpg'  # old img path\n        lb_path = (lbs_path\
      \ / f.name).with_suffix('.txt')  # new label path\n        f.rename(imgs_path\
      \ / f.name)  # move image\n        convert_label(path, lb_path, year, id)  #\
      \ convert labels to YOLO format\n"
    names:
    - aeroplane
    - bicycle
    - car
    - person
    - ship
    nc: 5
    path: E:\kg\data\SONAR_VOC_MulitScale_styletransfer\VOC2007_Style_1\target_shadow_gray_SaltPeper_128
    test:
    - E:\kg\data\SONAR_VOC_MulitScale_styletransfer\VOC2007_Style_1\target_shadow_gray_SaltPeper_128\images\test
    train:
    - E:\kg\data\SONAR_VOC_MulitScale_styletransfer\VOC2007_Style_1\target_shadow_gray_SaltPeper_128\images\train
    - E:\kg\data\SONAR_VOC_MulitScale_styletransfer\VOC2007_Style_1\target_shadow_gray_SaltPeper_128\images\val
    val:
    - E:\kg\data\SONAR_VOC_MulitScale_styletransfer\VOC2007_Style_1\target_shadow_gray_SaltPeper_128\images\val
device:
  desc: null
  value: ''
entity:
  desc: null
  value: null
epochs:
  desc: null
  value: 2
evolve:
  desc: null
  value: null
exist_ok:
  desc: null
  value: false
freeze:
  desc: null
  value:
  - 0
hyp:
  desc: null
  value:
    anchor_t: 4.0
    box: 0.05
    cls: 0.5
    cls_pw: 1.0
    copy_paste: 0.0
    degrees: 0.0
    fl_gamma: 0.0
    fliplr: 0.5
    flipud: 0.0
    hsv_h: 0.015
    hsv_s: 0.7
    hsv_v: 0.4
    iou_t: 0.2
    lr0: 0.01
    lrf: 0.01
    mixup: 0.0
    momentum: 0.937
    mosaic: 1.0
    obj: 1.0
    obj_pw: 1.0
    perspective: 0.0
    scale: 0.5
    shear: 0.0
    translate: 0.1
    warmup_bias_lr: 0.1
    warmup_epochs: 3.0
    warmup_momentum: 0.8
    weight_decay: 0.0005
image_weights:
  desc: null
  value: false
imgsz:
  desc: null
  value: 160
label_smoothing:
  desc: null
  value: 0.0
local_rank:
  desc: null
  value: -1
loss:
  desc: null
  value: origin
multi_scale:
  desc: null
  value: false
name:
  desc: null
  value: exp
noautoanchor:
  desc: null
  value: false
nosave:
  desc: null
  value: false
noval:
  desc: null
  value: false
optimizer:
  desc: null
  value: SGD
otaloss:
  desc: null
  value: origin
patience:
  desc: null
  value: 100
project:
  desc: null
  value: runs\train
quad:
  desc: null
  value: false
rect:
  desc: null
  value: false
resume:
  desc: null
  value: false
save_dir:
  desc: null
  value: runs\train\exp
save_period:
  desc: null
  value: -1
single_cls:
  desc: null
  value: false
sync_bn:
  desc: null
  value: false
upload_dataset:
  desc: null
  value: false
weights:
  desc: null
  value: yolov5s.pt
workers:
  desc: null
  value: 0
