2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_setup.py:_flush():68] Configure stats pid to 16380
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_setup.py:_flush():68] Loading settings from C:\Users\Admin\.config\wandb\settings
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_setup.py:_flush():68] Loading settings from E:\kg\yoloair-iscyy-beta\wandb\settings
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'train.py', 'program': 'E:\\kg\\yoloair-iscyy-beta\\train.py'}
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_setup.py:_flush():68] Applying login settings: {'login_timeout': 30}
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_init.py:_log_setup():476] Logging user logs to E:\kg\yoloair-iscyy-beta\wandb\run-20230101_140532-1s5wy6pt\logs\debug.log
2023-01-01 14:05:32,384 INFO    MainThread:16380 [wandb_init.py:_log_setup():477] Logging internal logs to E:\kg\yoloair-iscyy-beta\wandb\run-20230101_140532-1s5wy6pt\logs\debug-internal.log
2023-01-01 14:05:32,386 INFO    MainThread:16380 [wandb_init.py:init():516] calling init triggers
2023-01-01 14:05:32,386 INFO    MainThread:16380 [wandb_init.py:init():519] wandb.init called with sweep_config: {}
config: {'weights': 'yolov5s.pt', 'cfg': 'configs\\yolov7-transformer-Improved\\yolov7-Transformer-ConvNext-attnetion.yaml', 'data': 'data\\VOC.yaml', 'hyp': {'lr0': 0.01, 'lrf': 0.01, 'momentum': 0.937, 'weight_decay': 0.0005, 'warmup_epochs': 3.0, 'warmup_momentum': 0.8, 'warmup_bias_lr': 0.1, 'box': 0.05, 'cls': 0.5, 'cls_pw': 1.0, 'obj': 1.0, 'obj_pw': 1.0, 'iou_t': 0.2, 'anchor_t': 4.0, 'fl_gamma': 0.0, 'hsv_h': 0.015, 'hsv_s': 0.7, 'hsv_v': 0.4, 'degrees': 0.0, 'translate': 0.1, 'scale': 0.5, 'shear': 0.0, 'perspective': 0.0, 'flipud': 0.0, 'fliplr': 0.5, 'mosaic': 1.0, 'mixup': 0.0, 'copy_paste': 0.0}, 'epochs': 2, 'loss': 'origin', 'auxotaloss': False, 'otaloss': 'origin', 'batch_size': 2, 'imgsz': 160, 'rect': False, 'resume': False, 'nosave': False, 'noval': False, 'noautoanchor': False, 'evolve': None, 'bucket': '', 'cache': None, 'image_weights': False, 'device': '', 'multi_scale': False, 'single_cls': False, 'optimizer': 'SGD', 'sync_bn': False, 'workers': 0, 'project': 'runs\\train', 'name': 'exp', 'exist_ok': False, 'quad': False, 'cos_lr': False, 'label_smoothing': 0.0, 'patience': 100, 'freeze': [0], 'save_period': -1, 'local_rank': -1, 'entity': None, 'upload_dataset': False, 'bbox_interval': -1, 'artifact_alias': 'latest', 'save_dir': 'runs\\train\\exp'}
2023-01-01 14:05:32,387 INFO    MainThread:16380 [wandb_init.py:init():569] starting backend
2023-01-01 14:05:32,387 INFO    MainThread:16380 [wandb_init.py:init():573] setting up manager
2023-01-01 14:05:32,393 INFO    MainThread:16380 [backend.py:_multiprocessing_setup():102] multiprocessing start_methods=spawn, using: spawn
2023-01-01 14:05:32,400 INFO    MainThread:16380 [wandb_init.py:init():580] backend started and connected
2023-01-01 14:05:32,462 INFO    MainThread:16380 [wandb_init.py:init():658] updated telemetry
2023-01-01 14:05:32,464 INFO    MainThread:16380 [wandb_init.py:init():693] communicating run to backend with 60 second timeout
2023-01-01 14:05:53,811 INFO    MainThread:16380 [wandb_run.py:_on_init():2006] communicating current version
2023-01-01 14:05:56,825 INFO    MainThread:16380 [wandb_run.py:_on_init():2010] got version response 
2023-01-01 14:05:56,825 INFO    MainThread:16380 [wandb_init.py:init():728] starting run threads in backend
2023-01-01 14:06:01,485 INFO    MainThread:16380 [wandb_run.py:_console_start():1986] atexit reg
2023-01-01 14:06:01,487 INFO    MainThread:16380 [wandb_run.py:_redirect():1844] redirect: SettingsConsole.WRAP_RAW
2023-01-01 14:06:01,487 INFO    MainThread:16380 [wandb_run.py:_redirect():1909] Wrapping output streams.
2023-01-01 14:06:01,487 INFO    MainThread:16380 [wandb_run.py:_redirect():1931] Redirects installed.
2023-01-01 14:06:01,487 INFO    MainThread:16380 [wandb_init.py:init():765] run started, returning control to user process
2023-01-01 14:06:01,497 INFO    MainThread:16380 [wandb_run.py:_config_callback():1163] config_cb None None {'data_dict': {'path': 'E:\\kg\\data\\SONAR_VOC_MulitScale_styletransfer\\VOC2007_Style_1\\target_shadow_gray_SaltPeper_128', 'train': ['E:\\kg\\data\\SONAR_VOC_MulitScale_styletransfer\\VOC2007_Style_1\\target_shadow_gray_SaltPeper_128\\images\\train', 'E:\\kg\\data\\SONAR_VOC_MulitScale_styletransfer\\VOC2007_Style_1\\target_shadow_gray_SaltPeper_128\\images\\val'], 'val': ['E:\\kg\\data\\SONAR_VOC_MulitScale_styletransfer\\VOC2007_Style_1\\target_shadow_gray_SaltPeper_128\\images\\val'], 'test': ['E:\\kg\\data\\SONAR_VOC_MulitScale_styletransfer\\VOC2007_Style_1\\target_shadow_gray_SaltPeper_128\\images\\test'], 'nc': 5, 'names': ['aeroplane', 'bicycle', 'car', 'person', 'ship'], 'download': 'import xml.etree.ElementTree as ET\n\nfrom tqdm import tqdm\nfrom utils.general import download, Path\n\n\ndef convert_label(path, lb_path, year, image_id):\n    def convert_box(size, box):\n        dw, dh = 1. / size[0], 1. / size[1]\n        x, y, w, h = (box[0] + box[1]) / 2.0 - 1, (box[2] + box[3]) / 2.0 - 1, box[1] - box[0], box[3] - box[2]\n        return x * dw, y * dh, w * dw, h * dh\n\n    in_file = open(path / f\'VOC{year}/Annotations/{image_id}.xml\')\n    out_file = open(lb_path, \'w\')\n    tree = ET.parse(in_file)\n    root = tree.getroot()\n    size = root.find(\'size\')\n    w = int(size.find(\'width\').text)\n    h = int(size.find(\'height\').text)\n\n    for obj in root.iter(\'object\'):\n        cls = obj.find(\'name\').text\n        if cls in yaml[\'names\'] and not int(obj.find(\'difficult\').text) == 1:\n            xmlbox = obj.find(\'bndbox\')\n            bb = convert_box((w, h), [float(xmlbox.find(x).text) for x in (\'xmin\', \'xmax\', \'ymin\', \'ymax\')])\n            cls_id = yaml[\'names\'].index(cls)  # class id\n            out_file.write(" ".join([str(a) for a in (cls_id, *bb)]) + \'\\n\')\n\n\n# Download\ndir = Path(yaml[\'path\'])  # dataset root dir\nurl = \'https://github.com/ultralytics/yolov5/releases/download/v1.0/\'\nurls = [url + \'VOCtrainval_06-Nov-2007.zip\',  # 446MB, 5012 images\n        url + \'VOCtest_06-Nov-2007.zip\',  # 438MB, 4953 images\n        url + \'VOCtrainval_11-May-2012.zip\']  # 1.95GB, 17126 images\ndownload(urls, dir=dir / \'images\', delete=False)\n\n# Convert\npath = dir / f\'images/VOCdevkit\'\nfor year, image_set in (\'2012\', \'train\'), (\'2012\', \'val\'), (\'2007\', \'train\'), (\'2007\', \'val\'), (\'2007\', \'test\'):\n    imgs_path = dir / \'images\' / f\'{image_set}{year}\'\n    lbs_path = dir / \'labels\' / f\'{image_set}{year}\'\n    imgs_path.mkdir(exist_ok=True, parents=True)\n    lbs_path.mkdir(exist_ok=True, parents=True)\n\n    image_ids = open(path / f\'VOC{year}/ImageSets/Main/{image_set}.txt\').read().strip().split()\n    for id in tqdm(image_ids, desc=f\'{image_set}{year}\'):\n        f = path / f\'VOC{year}/JPEGImages/{id}.jpg\'  # old img path\n        lb_path = (lbs_path / f.name).with_suffix(\'.txt\')  # new label path\n        f.rename(imgs_path / f.name)  # move image\n        convert_label(path, lb_path, year, id)  # convert labels to YOLO format\n'}}
2023-01-01 14:07:35,109 WARNING MsgRouterThr:16380 [router.py:message_loop():77] message_loop has been closed
